module Dashboard_warning_lights__switch
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type switch
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = switch,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type switch__ref = { mutable switch__content : switch }
  
  function switch__ref_switch__content__projection (a: switch__ref) : switch =
    a.switch__content
  
  meta "model_projection" function switch__ref_switch__content__projection
  
  meta "inline:no" function switch__ref_switch__content__projection
  
  val switch__havoc (x: switch__ref) : unit
    writes { x }
end

module Dashboard_warning_lights__switch__rep
  use Dashboard_warning_lights__switch as Dashboard_warning_lights__switch
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Dashboard_warning_lights__switch.switch,
    predicate in_range = Dashboard_warning_lights__switch.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Dashboard_warning_lights__switch
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Dashboard_warning_lights__switch as Dashboard_warning_lights__switch
  use Dashboard_warning_lights__switch__rep as Dashboard_warning_lights__switch__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Dashboard_warning_lights__switch.switch
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_161 : int.
          if ((a__first <= temp___idx_161) /\ (temp___idx_161 <= a__last)) then
            ((Dashboard_warning_lights__switch__rep.to_rep
                ((get a) temp___idx_161))
               = (Dashboard_warning_lights__switch__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_161))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_161 : int.
                 if ((a__first <= temp___idx_161) /\
                       (temp___idx_161 <= a__last)) then
                   ((Dashboard_warning_lights__switch__rep.to_rep
                       ((get a) temp___idx_161))
                      = (Dashboard_warning_lights__switch__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_161))))
                 else true)))
end

module Dashboard_warning_lights__checklights__this
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Dashboard_warning_lights__switch as Array__Int__Dashboard_warning_lights__switch
  
  val this : Array__Int__Dashboard_warning_lights__switch.map__ref
end

module Dashboard_warning_lights__checklights__L_1__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Dashboard_warning_lights__lightsstatus___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Dashboard_warning_lights__switch as Array__Int__Dashboard_warning_lights__switch
  use Array__Int__Dashboard_warning_lights__switch as Array__Int__Dashboard_warning_lights__switch
  
  predicate dynamic_invariant (temp___expr_180: Array__Int__Dashboard_warning_lights__switch.map) (temp___is_init_176: bool) (temp___skip_constant_177: bool) (temp___do_toplevel_178: bool) (temp___do_typ_inv_179: bool) =
    true
  
  val dynamic_invariant (temp___expr_180: Array__Int__Dashboard_warning_lights__switch.map) (temp___is_init_176: bool) (temp___skip_constant_177: bool) (temp___do_toplevel_178: bool) (temp___do_typ_inv_179: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_180 :
                          Array__Int__Dashboard_warning_lights__switch.map))
                      (temp___is_init_176 : bool))
                     (temp___skip_constant_177 : bool))
                    (temp___do_toplevel_178 : bool))
                   (temp___do_typ_inv_179 : bool)) }
  
  predicate default_initial_assumption (temp___expr_182: Array__Int__Dashboard_warning_lights__switch.map) (temp___skip_top_level_183: bool) =
    true
  
  val default_initial_assumption (temp___expr_182: Array__Int__Dashboard_warning_lights__switch.map) (temp___skip_top_level_183: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_182 :
                       Array__Int__Dashboard_warning_lights__switch.map))
                   (temp___skip_top_level_183 : bool)) }
end

module Dashboard_warning_lights__checklights__L_1
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_1
end

module Dashboard_warning_lights__checklights__L_1__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Dashboard_warning_lights__checklights__L_1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Dashboard_warning_lights__switch___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Dashboard_warning_lights__switch as Dashboard_warning_lights__switch
  
  predicate dynamic_invariant (temp___expr_166: int) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) =
    if ((temp___is_init_162 = True) \/
          (Dashboard_warning_lights__switch.first
             <= Dashboard_warning_lights__switch.last)) then
      (((Dashboard_warning_lights__switch.dynamic_property
           Dashboard_warning_lights__switch.first)
          Dashboard_warning_lights__switch.last)
         temp___expr_166)
    else true
  
  val dynamic_invariant (temp___expr_166: int) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_166 : int))
                      (temp___is_init_162 : bool))
                     (temp___skip_constant_163 : bool))
                    (temp___do_toplevel_164 : bool))
                   (temp___do_typ_inv_165 : bool)) }
  
  predicate default_initial_assumption (temp___expr_167: int) (temp___skip_top_level_168: bool) =
    true
  
  val default_initial_assumption (temp___expr_167: int) (temp___skip_top_level_168: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_167 : int))
                   (temp___skip_top_level_168 : bool)) }
end

module Dashboard_warning_lights__checklights__this___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Dashboard_warning_lights__checklights__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use _gnatprove_standard.Boolean as Boolean
  use Array__Int__Dashboard_warning_lights__switch as Array__Int__Dashboard_warning_lights__switch
  use Dashboard_warning_lights__checklights__this as Dashboard_warning_lights__checklights__this
  use Dashboard_warning_lights__checklights__L_1__i as Dashboard_warning_lights__checklights__L_1__i
  use Dashboard_warning_lights__switch as Dashboard_warning_lights__switch
  use Dashboard_warning_lights__switch__rep as Dashboard_warning_lights__switch__rep
  use Array__Int__Dashboard_warning_lights__switch as Array__Int__Dashboard_warning_lights__switch
  use Dashboard_warning_lights__lightsstatus___axiom as Dashboard_warning_lights__lightsstatus___axiom
  use Dashboard_warning_lights__checklights__L_1 as Dashboard_warning_lights__checklights__L_1
  use Dashboard_warning_lights__checklights__L_1__i___axiom as Dashboard_warning_lights__checklights__L_1__i___axiom
  use Dashboard_warning_lights__checklights__L_1___axiom as Dashboard_warning_lights__checklights__L_1___axiom
  use Dashboard_warning_lights__switch___axiom as Dashboard_warning_lights__switch___axiom
  use Dashboard_warning_lights__lightsstatus___axiom as Dashboard_warning_lights__lightsstatus___axiom
  use Dashboard_warning_lights__checklights__this___axiom as Dashboard_warning_lights__checklights__this___axiom
  
  let def (__void_param : unit)
    requires { [#"dashboard_warning_lights.ads" 12 0 0] true }
    ensures { [#"dashboard_warning_lights.ads" 12 0 0]
              [#"dashboard_warning_lights.ads" 14 0 0]
              [@GP_Shape:pragargs__forall]
              [@GP_Reason:VC_POSTCONDITION]
              [@comment:     Post => (for all i in This'Range => This(i) = On);              ^ dashboard_warning_lights.ads:14:14:VC_POSTCONDITION]
              [@GP_Sloc:dashboard_warning_lights.ads:14:14]
              [@model_vc_post]
              [@GP_Id:0]
              (forall i : int.
                 ((((0 : int) <= i) /\ (i <= (11 : int))) ->
                    ([@GP_Pretty_Ada:928]
                     [@GP_Sloc:dashboard_warning_lights.ads:14:42]
                     ((Dashboard_warning_lights__switch__rep.to_rep
                         ((Array__Int__Dashboard_warning_lights__switch.get
                             (Dashboard_warning_lights__checklights__this.this.
                                Array__Int__Dashboard_warning_lights__switch.map__content))
                            i))
                        = (0 : int))))) }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram dashboard_warning_lights.ads:12]
      ());
     assume {
       ((((Dashboard_warning_lights__lightsstatus___axiom.dynamic_invariant
             (Dashboard_warning_lights__checklights__this.this.Array__Int__Dashboard_warning_lights__switch.map__content))
            True)
           False)
          True)
         True };
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram dashboard_warning_lights.ads:12]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram dashboard_warning_lights.ads:12]
      ());
     (begin
        ensures { true }
        let _ =
          let _ =
            (let i = val _f : int in
                     _f in
             if ((Boolean.andb ((0 : int) <= i)) (i <= (11 : int))) then
               (begin
                  ensures { true }
                  let _ =
                    let _ =
                      ((Dashboard_warning_lights__switch__rep.to_rep
                          ((Array__Int__Dashboard_warning_lights__switch.get
                              (Dashboard_warning_lights__checklights__this.this.
                                 Array__Int__Dashboard_warning_lights__switch.map__content))
                             i))
                         = (1 : int)) in
                    () in
                  ()
                end)
             else ());
            (val _f : bool
               ensures { ((result = True) <->
                            (forall i : int.
                               ((((0 : int) <= i) /\ (i <= (11 : int))) ->
                                  ([@GP_Pretty_Ada:916]
                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                       ((Array__Int__Dashboard_warning_lights__switch.get
                                           (Dashboard_warning_lights__checklights__this.this.
                                              Array__Int__Dashboard_warning_lights__switch.map__content))
                                          i))
                                      = (1 : int)))))) } in
             _f) in
          () in
        ()
      end);
     ([@GNAT-comment:Assume Pre of the subprogram dashboard_warning_lights.ads:12]
      ());
     assume {
       forall i : int.
         ((((0 : int) <= i) /\ (i <= (11 : int))) ->
            ([@GP_Pretty_Ada:916]
             ((Dashboard_warning_lights__switch__rep.to_rep
                 ((Array__Int__Dashboard_warning_lights__switch.get
                     (Dashboard_warning_lights__checklights__this.this.
                        Array__Int__Dashboard_warning_lights__switch.map__content))
                    i))
                = (1 : int)))) };
     (try
        ([#"dashboard_warning_lights.adb" 5 0 0] ());
        ([@GP_Sloc:dashboard_warning_lights.adb:5:27]
         [#"dashboard_warning_lights.adb" 5 0 0]
         (let temp___188 = 0 : int in
          let temp___189 = 11 : int in
          ([@GNAT-comment:Translation of an unrolled Ada loop from dashboard_warning_lights.adb:5]
           ());
          ([#"dashboard_warning_lights.adb" 5 0 0]
           (try
              let temp___loop_entry_191 =
                Dashboard_warning_lights__checklights__this.this.Array__Int__Dashboard_warning_lights__switch.map__content in
              ([@GNAT-comment:Unrolling of the loop statements of loop dashboard_warning_lights.adb:5]
               ());
              ([#"dashboard_warning_lights.adb" 5 0 0]
               (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                  (0 : int)));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (1 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (2 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (3 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (4 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (5 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (6 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (7 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (8 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (9 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (10 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()));
              (Dashboard_warning_lights__checklights__L_1__i.i.int__content <-
                 (11 : int));
              ([@GP_Sloc:dashboard_warning_lights.adb:6:10]
               [#"dashboard_warning_lights.adb" 6 0 0]
               (if (([#"dashboard_warning_lights.adb" 6 0 0]
                     [#"dashboard_warning_lights.adb" 6 0 0]
                     (([@branch_id=837] Main.spark__branch).bool__content <-
                        ((Dashboard_warning_lights__switch__rep.to_rep
                            ((Array__Int__Dashboard_warning_lights__switch.get
                                (Dashboard_warning_lights__checklights__this.this.
                                   Array__Int__Dashboard_warning_lights__switch.map__content))
                               (Dashboard_warning_lights__checklights__L_1__i.i.int__content)))
                           = (1 : int))));
                    (([@branch_id=837] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:dashboard_warning_lights.adb:7:21]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   [#"dashboard_warning_lights.adb" 7 0 0]
                   (Dashboard_warning_lights__checklights__this.this.
                      Array__Int__Dashboard_warning_lights__switch.map__content <-
                      (((Array__Int__Dashboard_warning_lights__switch.set
                           (Dashboard_warning_lights__checklights__this.this.
                              Array__Int__Dashboard_warning_lights__switch.map__content))
                          (Dashboard_warning_lights__checklights__L_1__i.i.int__content))
                         (Dashboard_warning_lights__switch__rep.of_rep
                            (0 : int)))))
                else ()))
            with Dashboard_warning_lights__checklights__L_1.L_1 -> ()
            end))));
        (raise Return__exc)
      with Return__exc -> ()
      end);
     (begin
        ensures { true }
        let _ =
          let _ =
            (let i = val _f : int in
                     _f in
             if ((Boolean.andb ((0 : int) <= i)) (i <= (11 : int))) then
               (begin
                  ensures { true }
                  let _ =
                    let _ =
                      ((Dashboard_warning_lights__switch__rep.to_rep
                          ((Array__Int__Dashboard_warning_lights__switch.get
                              (Dashboard_warning_lights__checklights__this.this.
                                 Array__Int__Dashboard_warning_lights__switch.map__content))
                             i))
                         = (0 : int)) in
                    () in
                  ()
                end)
             else ());
            (val _f : bool
               ensures { ((result = True) <->
                            (forall i : int.
                               ((((0 : int) <= i) /\ (i <= (11 : int))) ->
                                  ([@GP_Pretty_Ada:928]
                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                       ((Array__Int__Dashboard_warning_lights__switch.get
                                           (Dashboard_warning_lights__checklights__this.this.
                                              Array__Int__Dashboard_warning_lights__switch.map__content))
                                          i))
                                      = (0 : int)))))) } in
             _f) in
          () in
        ()
      end))
end
