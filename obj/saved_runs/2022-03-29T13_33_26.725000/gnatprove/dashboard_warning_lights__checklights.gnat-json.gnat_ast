(* Module for axiomatizing type "switch" defined at dashboard_warning_lights.ads:4, created in Gnat2Why.Types.Translate_Type *)
module Dashboard_warning_lights__switch
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type switch  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 2
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = switch,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type switch__ref  = { mutable switch__content : switch }
  
  function   switch__ref_switch__content__projection (a : switch__ref)
    requires {  } ensures  {  } returns switch = a.switch__content
  
  meta model_projection function switch__ref_switch__content__projection
  
  meta inline:no function switch__ref_switch__content__projection
  
  function   switch__havoc (x : switch__ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_rep/of_rep for type "switch" defined at dashboard_warning_lights.ads:4, created in Gnat2Why.Types.Translate_Type *)
module Dashboard_warning_lights__switch__rep
  
  use        Dashboard_warning_lights__switch
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Dashboard_warning_lights__switch.switch,
    predicate in_range = Dashboard_warning_lights__switch.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "light" defined at dashboard_warning_lights.ads:9, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Dashboard_warning_lights__light__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Dashboard_warning_lights__switch
  use        Dashboard_warning_lights__switch__rep
  
  type __split_fields  = { [name:state]
                           [model_trace:.897]rec__dashboard_warning_lights__light__state : Dashboard_warning_lights__switch.switch;
                           rec__ext__ : _gnatprove_standard.Main.__private }
  
  function [name:state] [model_trace:.897] 
    __split_fields_rec__dashboard_warning_lights__light__state__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Dashboard_warning_lights__switch.switch = a.rec__dashboard_warning_lights__light__state
  
  meta model_projection function __split_fields_rec__dashboard_warning_lights__light__state__projection
  
  meta inline:no function __split_fields_rec__dashboard_warning_lights__light__state__projection
  
  function   __split_fields_rec__ext____projection (a : __split_fields)
    requires {  } ensures  {  } returns
    _gnatprove_standard.Main.__private = a.rec__ext__
  
  meta model_projection function __split_fields_rec__ext____projection
  
  meta inline:no function __split_fields_rec__ext____projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields; attr__tag : int }
  
  function   __rep___split_fields__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__projection
  
  meta inline:no function __rep___split_fields__projection
  
  function   __rep_attr__tag__projection (a : __rep) requires {  } ensures 
    {  } returns int = a.attr__tag
  
  meta model_projection function __rep_attr__tag__projection
  
  meta inline:no function __rep_attr__tag__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   dashboard_warning_lights__light__state__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__dashboard_warning_lights__light__state_ (a : __rep)
    requires { (dashboard_warning_lights__light__state__pred a) } ensures 
    { (result = a.__split_fields.rec__dashboard_warning_lights__light__state) }
    returns Dashboard_warning_lights__switch.switch
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           ((Dashboard_warning_lights__switch__rep.to_rep
               a.__split_fields.rec__dashboard_warning_lights__light__state)
              = (Dashboard_warning_lights__switch__rep.to_rep
                   b.__split_fields.rec__dashboard_warning_lights__light__state))
           then True  else False)
  
  function   __dispatch_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns bool

end

(* Module for axiomatizing type "light" defined at dashboard_warning_lights.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Dashboard_warning_lights__light
  
  use export Dashboard_warning_lights__light__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type light  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   __tag () requires {  } ensures  {  } returns int
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   dashboard_warning_lights__light__state__first__bit () requires
    {  } ensures  {  } returns int
  
  function   dashboard_warning_lights__light__state__last__bit () requires
    {  } ensures  {  } returns int
  
  function   dashboard_warning_lights__light__state__position () requires
    {  } ensures  {  } returns int
  
  axiom dashboard_warning_lights__light__state__first__bit_axiom : ((dashboard_warning_lights__light__state__first__bit
                                                                    ) >= 0)
  
  axiom dashboard_warning_lights__light__state__last__bit_axiom : ((dashboard_warning_lights__light__state__last__bit
                                                                    )
                                                                    > (
                                                                    dashboard_warning_lights__light__state__first__bit
                                                                    ))
  
  axiom dashboard_warning_lights__light__state__position_axiom : ((dashboard_warning_lights__light__state__position
                                                                    ) >= 0)
  
  function   user_eq (a : light b : light) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns light
  
  type light__ref  = { mutable light__content : light }
  
  function   light__ref_light__content__projection (a : light__ref) requires
    {  } ensures  {  } returns light = a.light__content
  
  meta model_projection function light__ref_light__content__projection
  
  meta inline:no function light__ref_light__content__projection
  
  function   light__havoc (x : light__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing the array theory associated to type "TlightsstatusB" defined at dashboard_warning_lights.ads:13, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Dashboard_warning_lights__light
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Dashboard_warning_lights__light
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a ref holding the value of variable "this" defined at dashboard_warning_lights.ads:16, created in Gnat2Why.Decls.Translate_Variable *)
module Dashboard_warning_lights__checklights__this
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Dashboard_warning_lights__light
  
  val this [model_projected] [model_trace:911]
  [name:This] [sloc:dashboard_warning_lights.ads:16]: Array__Int__Dashboard_warning_lights__light.map

end

(* Module for possibly declaring a logic function for "lightsoff" defined at dashboard_warning_lights.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Dashboard_warning_lights__lightsoff
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Dashboard_warning_lights__light
  
  function   lightsoff
    (this : Array__Int__Dashboard_warning_lights__light.map) requires
    { True } ensures  { True } returns bool
  
  function   lightsoff__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_162) : bool
    this : Array__Int__Dashboard_warning_lights__light.map) requires { True }
    ensures  { True } returns bool

end

(* Module for axiomatizing type "lights" defined at dashboard_warning_lights.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Dashboard_warning_lights__lights
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type lights  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 11
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = lights,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type lights__ref  = { mutable lights__content : lights }
  
  function   lights__ref_lights__content__projection (a : lights__ref)
    requires {  } ensures  {  } returns lights = a.lights__content
  
  meta model_projection function lights__ref_lights__content__projection
  
  meta inline:no function lights__ref_lights__content__projection
  
  function   lights__havoc (x : lights__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "lightsstatus" defined at dashboard_warning_lights.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Dashboard_warning_lights__lightsstatus___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Dashboard_warning_lights__lights
  use        Dashboard_warning_lights__light
  use        Array__Int__Dashboard_warning_lights__light
  use        Array__Int__Dashboard_warning_lights__light
  use        Array__Int__Dashboard_warning_lights__light
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_189) : Array__Int__Dashboard_warning_lights__light.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_185) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_186) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_187) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_188) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_191) : Array__Int__Dashboard_warning_lights__light.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_192) : bool)
    requires { True } ensures  { True } returns
     = --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving a program function and a defining axiom for the expression function "lightsoff" defined at dashboard_warning_lights.ads:20, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Dashboard_warning_lights__lightsoff___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Dashboard_warning_lights__lightsoff
  use        Dashboard_warning_lights__switch
  use        Dashboard_warning_lights__switch__rep
  use        Dashboard_warning_lights__light
  use        Array__Int__Dashboard_warning_lights__light
  use        Dashboard_warning_lights__lightsstatus___axiom
  use        Array__Int__Dashboard_warning_lights__light
  use        Array__Int__Dashboard_warning_lights__light
  use        Array__Int__Dashboard_warning_lights__light
  
  function   lightsoff
    (this : Array__Int__Dashboard_warning_lights__light.map) requires
    { True } ensures 
    { ((result = (Dashboard_warning_lights__lightsoff.lightsoff this)) /\
         (Dashboard_warning_lights__lightsoff.lightsoff__function_guard
            result this) /\ (result = --pp_universal_quantif NOT IMPLEMENTED)) }
    returns bool
  
  axiom lightsoff__post_axiom : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom lightsoff__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a ref holding the value of variable "i" defined at dashboard_warning_lights.adb:5, created in Gnat2Why.Decls.Translate_Variable *)
module Dashboard_warning_lights__checklights__L_1__i
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val i [model_trace:829] [name:i]
  [model_projected] [sloc:dashboard_warning_lights.adb:5]: int

end

(* Module for defining the loop exit exception for the loop "L_1" defined at dashboard_warning_lights.adb:5, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Dashboard_warning_lights__checklights__L_1
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module giving an empty axiom for the entity "i" defined at dashboard_warning_lights.adb:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Dashboard_warning_lights__checklights__L_1__i___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_1" defined at dashboard_warning_lights.adb:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Dashboard_warning_lights__checklights__L_1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "switch" defined at dashboard_warning_lights.ads:4, created in Gnat2Why.Types.Generate_Type_Completion *)
module Dashboard_warning_lights__switch___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Dashboard_warning_lights__switch
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_167) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_163) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_164) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_165) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_166) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_163) = True) \/
          (Dashboard_warning_lights__switch.first
             <= Dashboard_warning_lights__switch.last))
       then
       (Dashboard_warning_lights__switch.dynamic_property
          Dashboard_warning_lights__switch.first
          Dashboard_warning_lights__switch.last ([mlw:proxy_symbol]
          [introduced] temp___expr_167))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_168) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_169) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "lights" defined at dashboard_warning_lights.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Dashboard_warning_lights__lights___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Dashboard_warning_lights__lights
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_174) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_170) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_171) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_172) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_173) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_170) = True) \/
          (Dashboard_warning_lights__lights.first
             <= Dashboard_warning_lights__lights.last))
       then
       (Dashboard_warning_lights__lights.dynamic_property
          Dashboard_warning_lights__lights.first
          Dashboard_warning_lights__lights.last ([mlw:proxy_symbol]
          [introduced] temp___expr_174))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_175) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_176) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "light" defined at dashboard_warning_lights.ads:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Dashboard_warning_lights__light___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Dashboard_warning_lights__light
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_181) : Dashboard_warning_lights__light.light
    ([mlw:proxy_symbol] [introduced] temp___is_init_177) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_178) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_179) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_180) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_182) : Dashboard_warning_lights__light.light
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_183) : bool)
    requires { True } ensures  { True } returns
     = ((Dashboard_warning_lights__light.attr__tag ([mlw:proxy_symbol]
           [introduced] temp___expr_182))
          = Dashboard_warning_lights__light.__tag)

end

(* Module giving an empty axiom for the entity "this" defined at dashboard_warning_lights.ads:16, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Dashboard_warning_lights__checklights__this___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "checklights" defined at dashboard_warning_lights.ads:16, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Dashboard_warning_lights__checklights__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Boolean
  use        Array__Int__Dashboard_warning_lights__light
  use        Dashboard_warning_lights__checklights__this
  use        Dashboard_warning_lights__lightsoff
  use        Dashboard_warning_lights__lightsoff___axiom
  use        Dashboard_warning_lights__checklights__L_1__i
  use        Dashboard_warning_lights__switch
  use        Dashboard_warning_lights__switch__rep
  use        Dashboard_warning_lights__light
  use        Array__Int__Dashboard_warning_lights__light
  use        Dashboard_warning_lights__lightsstatus___axiom
  use        Dashboard_warning_lights__checklights__L_1
  use        Dashboard_warning_lights__checklights__L_1__i___axiom
  use        Dashboard_warning_lights__checklights__L_1___axiom
  use        Dashboard_warning_lights__switch___axiom
  use        Dashboard_warning_lights__lights___axiom
  use        Dashboard_warning_lights__light___axiom
  use        Dashboard_warning_lights__lightsstatus___axiom
  use        Dashboard_warning_lights__checklights__this___axiom
  use        Dashboard_warning_lights__lightsoff___axiom
  
  function [GP_Subp:dashboard_warning_lights.ads:16]
    [sloc:dashboard_warning_lights.ads:16] def (__void_param : unit) requires
    { True } ensures 
    { ([sloc:dashboard_warning_lights.ads:18] ([GP_Sloc:dashboard_warning_lights.ads:18:14]
                                              [GP_Reason:VC_POSTCONDITION]
                                              [comment:     Post => LightsOff(This);              ^ dashboard_warning_lights.ads:18:14:VC_POSTCONDITION]
                                              [model_vc_post] [GP_Id:0]
                                              [GP_Shape:pragargs__call_lightsoff] 
                                              ([GP_Pretty_Ada:3158]
                                              [GP_Sloc:dashboard_warning_lights.ads:18:14] (
                                              (epsilon ([mlw:proxy_symbol]
                                              [introduced] temp___result_211) : bool {
                                              ((([mlw:proxy_symbol]
                                                  [introduced] temp___result_211)
                                                  = (Dashboard_warning_lights__lightsoff.lightsoff
                                                       !Dashboard_warning_lights__checklights__this.this))
                                                 /\
                                                 (Dashboard_warning_lights__lightsoff.lightsoff__function_guard
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___result_211)
                                                    !Dashboard_warning_lights__checklights__this.this))})
                                                = True)))) } returns
     = (* Assume dynamic invariants of inputs of the subprogram dashboard_warning_lights.ads:16 *);
        assume
        { (Dashboard_warning_lights__lightsstatus___axiom.dynamic_invariant
             !Dashboard_warning_lights__checklights__this.this True False
             True True) };
        (* Assume moved pointers in outputs of the subprogram dashboard_warning_lights.ads:16 *);
        (* Check for RTE in the Pre of the subprogram dashboard_warning_lights.ads:16 *);
        abstract ensures
        { True } begin  (let _ = (let i = ( any  pre {} post {} return int)
                       in
                       (if
                       (_gnatprove_standard.Boolean.andb (0 <= i) (i <= 11))
                       then
                       abstract ensures
                       { True } begin  (let _ =
                                      ((Dashboard_warning_lights__switch__rep.to_rep
                                          ( (Array__Int__Dashboard_warning_lights__light.get
                                               !Dashboard_warning_lights__checklights__this.this
                                               i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                         = 1)
                                      in ())  end
                       ));
                       ( any  pre {} post
                       {((result = True) <->
                           --pp_existential_quantif NOT IMPLEMENTED)}
                       return bool) in ())  end;
  (* Assume Pre of the subprogram dashboard_warning_lights.ads:16 *);
  assume { --pp_existential_quantif NOT IMPLEMENTED };
  (try
  ();
    ([sloc:dashboard_warning_lights.adb:5] ());
    ();
    ([GP_Sloc:dashboard_warning_lights.adb:5:27] ([sloc:dashboard_warning_lights.adb:5] (let ([mlw:proxy_symbol]
                                                 [introduced] temp___203) = 
                                                 0 in
                                                 (let ([mlw:proxy_symbol]
                                                 [introduced] temp___204) =
                                                 11 in
                                                 (* Translation of an unrolled Ada loop from dashboard_warning_lights.adb:5 *);
                                                 (try
                                                 (let temp___loop_entry_207 =
                                                   !Dashboard_warning_lights__checklights__this.this
                                                   in
                                                   (* Unrolling of the loop statements of loop dashboard_warning_lights.adb:5 *);
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   0);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   1);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   2);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   3);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   4);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   5);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   6);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   7);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   8);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   9);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   10);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())));
                                                   (
                                                   Dashboard_warning_lights__checklights__L_1__i.i
                                                   :=
                                                   11);
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:6:10] 
                                                   ([sloc:dashboard_warning_lights.adb:6] 
                                                   (if
                                                   ([sloc:dashboard_warning_lights.adb:6] ([branch_id=837]
                                                   _gnatprove_standard.Main.spark__branch
                                                   :=
                                                   ((Dashboard_warning_lights__switch__rep.to_rep
                                                       ( (Array__Int__Dashboard_warning_lights__light.get
                                                            !Dashboard_warning_lights__checklights__this.this
                                                            !Dashboard_warning_lights__checklights__L_1__i.i)).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state)
                                                      = 1)));
                                                   ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                                   then
                                                   ();
                                                   ([GP_Sloc:dashboard_warning_lights.adb:7:27] 
                                                   ([sloc:dashboard_warning_lights.adb:7] (
                                                   Dashboard_warning_lights__checklights__this.this
                                                   :=
                                                   (Array__Int__Dashboard_warning_lights__light.set
                                                      !Dashboard_warning_lights__checklights__this.this
                                                      !Dashboard_warning_lights__checklights__L_1__i.i
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___206)
                                                      =
                                                      ( (Array__Int__Dashboard_warning_lights__light.get
                                                           !Dashboard_warning_lights__checklights__this.this
                                                           !Dashboard_warning_lights__checklights__L_1__i.i))
                                                      in abstract ensures
                                                      { True } begin 
                                                       (let _ =
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___206).Dashboard_warning_lights__light.__split_fields.Dashboard_warning_lights__light.rec__dashboard_warning_lights__light__state
                                                      in ())  end;
                                                      --pp_record_update NOT IMPLEMENTED)))))
                                                    else ())))) with
                                                 | Dashboard_warning_lights__checklights__L_1.L_1 
                                                 -> ())))));
    raise Return__exc with | Return__exc  -> ());
  abstract ensures
  { True } begin  (let _ =
                 (Dashboard_warning_lights__lightsoff___axiom.lightsoff
                    !Dashboard_warning_lights__checklights__this.this)
                 in ())  end

end
